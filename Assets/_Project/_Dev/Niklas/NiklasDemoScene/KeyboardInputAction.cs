//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Project/_Dev/Niklas/NiklasDemoScene/KeyboardInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KeyboardInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KeyboardInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KeyboardInputAction"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""1bbf3f14-5f4d-4a64-a95b-74681962b89c"",
            ""actions"": [
                {
                    ""name"": ""0"",
                    ""type"": ""Button"",
                    ""id"": ""30d7e962-d190-42e4-8eea-18ffa04e23b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Button"",
                    ""id"": ""155a736f-d393-404d-b0c9-5977c7529699"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Button"",
                    ""id"": ""15b157f0-ac04-49dc-b9c4-79539839964a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""9"",
                    ""type"": ""Button"",
                    ""id"": ""22553313-3892-4c6c-a35a-32f79f15a4e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""653233b9-df0b-4b4a-914b-1f2be7dd1429"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8c693bd-d7df-4f42-ada7-0fe8c18bed7b"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4464a55-c273-4ec2-a938-04c5c9edbf4a"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97f1752f-5689-40bf-988d-527db621f5e9"",
                    ""path"": ""<Keyboard>/numpad9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard__0 = m_Keyboard.FindAction("0", throwIfNotFound: true);
        m_Keyboard__3 = m_Keyboard.FindAction("3", throwIfNotFound: true);
        m_Keyboard__4 = m_Keyboard.FindAction("4", throwIfNotFound: true);
        m_Keyboard__9 = m_Keyboard.FindAction("9", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private List<IKeyboardActions> m_KeyboardActionsCallbackInterfaces = new List<IKeyboardActions>();
    private readonly InputAction m_Keyboard__0;
    private readonly InputAction m_Keyboard__3;
    private readonly InputAction m_Keyboard__4;
    private readonly InputAction m_Keyboard__9;
    public struct KeyboardActions
    {
        private @KeyboardInputAction m_Wrapper;
        public KeyboardActions(@KeyboardInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @_0 => m_Wrapper.m_Keyboard__0;
        public InputAction @_3 => m_Wrapper.m_Keyboard__3;
        public InputAction @_4 => m_Wrapper.m_Keyboard__4;
        public InputAction @_9 => m_Wrapper.m_Keyboard__9;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void AddCallbacks(IKeyboardActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyboardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Add(instance);
            @_0.started += instance.On_0;
            @_0.performed += instance.On_0;
            @_0.canceled += instance.On_0;
            @_3.started += instance.On_3;
            @_3.performed += instance.On_3;
            @_3.canceled += instance.On_3;
            @_4.started += instance.On_4;
            @_4.performed += instance.On_4;
            @_4.canceled += instance.On_4;
            @_9.started += instance.On_9;
            @_9.performed += instance.On_9;
            @_9.canceled += instance.On_9;
        }

        private void UnregisterCallbacks(IKeyboardActions instance)
        {
            @_0.started -= instance.On_0;
            @_0.performed -= instance.On_0;
            @_0.canceled -= instance.On_0;
            @_3.started -= instance.On_3;
            @_3.performed -= instance.On_3;
            @_3.canceled -= instance.On_3;
            @_4.started -= instance.On_4;
            @_4.performed -= instance.On_4;
            @_4.canceled -= instance.On_4;
            @_9.started -= instance.On_9;
            @_9.performed -= instance.On_9;
            @_9.canceled -= instance.On_9;
        }

        public void RemoveCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboardActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyboardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void On_0(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void On_9(InputAction.CallbackContext context);
    }
}
